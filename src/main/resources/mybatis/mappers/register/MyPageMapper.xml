<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.labs.register.dao.MyPageContentRepository">
    <!-- 사용자가 작성한 게시글 목록을 가져오는 쿼리 -->
    <select id="findContentsByUserId" parameterType="string" resultType="app.labs.register.model.MyContent">
        SELECT 
            content_id AS contentId, 
            user_id AS userId, 
            title, 
            date_created AS dateCreated, 
            last_updated AS lastUpdated, 
            file_id AS fileId, 
            recommend AS recommendCnt,  <!-- recommend를 recommendCnt로 매핑 -->
            text
        FROM 
            Content
        WHERE 
            user_id = #{userId}
    </select>
    
    <!-- 사용자가 작성한 게시글 목록 조회 -->
    <select id="findPostsByUserId" resultType="app.labs.register.model.MyContent">
        SELECT 
            content_id AS contentId,
            user_id AS userId,
            title,
            date_created AS dateCreated,
            last_updated AS lastUpdated,
            file_id AS fileId,
            recommend AS recommendCnt,  <!-- recommend를 recommendCnt로 매핑 -->
            text
        FROM 
            Content
        WHERE 
            user_id = #{userId}
        ORDER BY 
            date_created DESC
    </select>

    <!-- 사용자가 작성한 특정 조건의 게시글 목록을 가져오는 쿼리 -->
    <select id="findFilteredPostsByUserId" parameterType="string" resultType="app.labs.register.model.MyContent">
        SELECT 
            content_id AS contentId,
            user_id AS userId,
            title,
            date_created AS dateCreated,
            last_updated AS lastUpdated,
            file_id AS fileId,
            recommend AS recommendCnt,  <!-- recommend를 recommendCnt로 매핑 -->
            text
        FROM 
            Content
        WHERE 
            user_id = #{userId}
        ORDER BY 
            date_created DESC
    </select>
    
    <!-- 특정 게시글을 조회하는 쿼리 추가 -->
    <select id="findPostById" parameterType="int" resultType="app.labs.register.model.MyContent">
        SELECT 
            content_id AS contentId,
            user_id AS userId,
            title,
            date_created AS dateCreated,
            last_updated AS lastUpdated,
            file_id AS fileId,
            recommend AS recommendCnt,
            text
        FROM 
            Content
        WHERE 
            content_id = #{contentId}
    </select>

    <!-- 특정 댓글을 조회하는 쿼리 추가 -->
    <select id="findCommentById" parameterType="int" resultType="app.labs.register.model.PostComment">
        SELECT 
            comment_id AS commentId,
            user_id AS userId,
            content_id AS contentId,
            text,
            date_created AS dateCreated,
            last_updated AS lastUpdated
        FROM 
            Post_Comment
        WHERE 
            comment_id = #{commentId}
    </select>

    <!-- 사용자가 작성한 댓글 목록 조회 -->
    <select id="findCommentsByUserId" resultType="app.labs.register.model.PostComment">
        SELECT 
            comment_id AS commentId,
            user_id AS userId,
            content_id AS contentId,
            text,
            date_created AS dateCreated,
            last_updated AS lastUpdated
        FROM 
            Post_Comment
        WHERE 
            user_id = #{userId}
        ORDER BY 
            date_created DESC
    </select>

    <!-- 사용자가 작성한 특정 조건의 댓글 목록을 가져오는 쿼리 -->
    <select id="findFilteredCommentsByUserId" parameterType="string" resultType="app.labs.register.model.PostComment">
        SELECT 
            comment_id AS commentId,
            user_id AS userId,
            content_id AS contentId,
            text,
            date_created AS dateCreated,
            last_updated AS lastUpdated
        FROM 
            Post_Comment
        WHERE 
            user_id = #{userId}
        ORDER BY 
            date_created DESC
    </select>
</mapper>
