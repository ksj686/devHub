<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.labs.profile.dao.ProfileRepository">

	<select id="getProfileList" resultType="app.labs.profile.model.Profile">
		SELECT * FROM USER_PROFILE
	</select>

    <!-- 프로필 정보를 가져오는 SELECT 문 -->
    <select id="getProfileInfo" parameterType="string" resultType="app.labs.profile.model.Profile">
        SELECT PROFILE_ID,
        	   USER_ID,
        	   USER_NAME,
        	   EMAIL,
        	   COURSE_ID,        	   
        	   BIOGRAPHY
        FROM USER_PROFILE WHERE USER_ID = #{userId}
	</select>
	
	<!-- 특정 회원 정보 조회 -->
    <select id="getMemberInfo" parameterType="string" resultType="app.labs.register.model.Member">
        SELECT 
            IDX, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE_NUMBER, 
            TO_CHAR(SIGNUP_DATE, 'YYYY-MM-DD HH24:MI:SS') AS SIGNUP_DATE, 
            USER_STATUS, 
            TO_CHAR(LAST_LOGIN, 'YYYY-MM-DD HH24:MI:SS') AS LAST_LOGIN, 
            COURSE_ID, IMAGE_FILE
        FROM MEMBER
        WHERE USER_ID = #{userId}
    </select>
		
    <!-- update profile -->
    <update id="updateProfile" parameterType="app.labs.profile.model.Profile">
    	UPDATE USER_PROFILE
    	SET USER_ID = #{userId}, USER_NAME = #{userName}, EMAIL = #{email}, COURSE_ID = #{courseId}, BIOGRAPHY = #{biography, jdbcType=CLOB}       	
    	WHERE USER_ID = #{userId}
    	<!-- LAST_UPDATED = CASE WHEN #{lastUpdated} IS NOT NULL THEN TO_TIMESTAMP(#{lastUpdated}, 'YYYY-MM-DD HH24:MI:SS') ELSE NULL END -->
	</update>
	
	<!-- 코스 아이디, 네임 가져오기 -->
	<!-- <select id="getCourseName" parameterType="string" resultType="app.labs.profile.model.Profile">
		SELECT COURSE_ID, COURSE_NAME
		FROM COURSE
		WHERE COURSE_ID = #{courseId}	
	</select> -->
	
    <!-- 새로운 프로필 생성 -->
    <insert id="insertProfile" parameterType="app.labs.profile.model.Profile">
   		INSERT INTO USER_PROFILE (
        	USER_ID, USER_NAME, EMAIL, COURSE_ID, BIOGRAPHY
    	) VALUES (
        	#{userId}, #{userName}, #{email}, #{courseId}, #{biography, jdbcType=CLOB}
           	)
	</insert>
	
	
</mapper>
