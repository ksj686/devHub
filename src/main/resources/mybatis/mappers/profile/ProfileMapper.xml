<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.labs.profile.dao.ProfileRepository">

<resultMap id="ProfileResultMap" type="app.labs.profile.model.Profile">
	<result column="PROFILE_ID" property="profileId" />
    <result column="USER_ID" property="userId"/>
    <result column="USER_NAME" property="userName"/>
    <result column="EMAIL" property="email"/>
    <result column="COURSE_ID" property="courseId" />
    <result column="BIOGRAPHY" property="biography" jdbcType="CLOB"/>
    <result column="IMAGE_ID" property="imageId" />
    <result column="IMAGE_DATA" property="imageData" jdbcType="BLOB" javaType="[B"/>
    <result column="IMAGE_NAME" property="imageName" />
    <result column="IMAGE_CONTENT_TYPE" property="imageContentType" />
</resultMap>

	<select id="getProfileList" resultMap="ProfileResultMap">
		SELECT * FROM USER_PROFILE
	</select>

	<select id="getProfileInfo" parameterType="string" resultMap="ProfileResultMap">
        SELECT PROFILE_ID,
        	   USER_ID,
        	   USER_NAME,
        	   EMAIL,
        	   COURSE_ID,        	   
        	   BIOGRAPHY, 
        	   IMAGE_ID, 
        	   IMAGE_DATA, 
        	   IMAGE_NAME, 
        	   IMAGE_CONTENT_TYPE
        	   
        FROM USER_PROFILE WHERE USER_ID = #{userId}
	</select>
	
	<select id="getProfileImage" parameterType="int" resultMap="ProfileResultMap">
		SELECT IMAGE_ID, IMAGE_DATA, IMAGE_NAME, IMAGE_CONTENT_TYPE
		FROM USER_PROFILE WHERE IMAGE_ID = #{imageId}
	</select>
	
	<!-- 특정 회원 정보 조회 -->
    <select id="getMemberInfo" parameterType="string" resultType="app.labs.register.model.Member">
        SELECT 
            IDX, USER_ID, USER_PWD, USER_NAME, EMAIL, PHONE_NUMBER, 
            TO_CHAR(SIGNUP_DATE, 'YYYY-MM-DD HH24:MI:SS') AS SIGNUP_DATE, 
            USER_STATUS, 
            TO_CHAR(LAST_LOGIN, 'YYYY-MM-DD HH24:MI:SS') AS LAST_LOGIN, 
            COURSE_ID, IMAGE_FILE
        FROM MEMBER
        WHERE USER_ID = #{userId}
    </select>
		
    <!-- update profile -->
    <update id="updateProfile" parameterType="app.labs.profile.model.Profile">
    	UPDATE USER_PROFILE
    	SET USER_ID = #{userId}, USER_NAME = #{userName}, EMAIL = #{email}, COURSE_ID = #{courseId}, BIOGRAPHY = #{biography, jdbcType=CLOB}
    	WHERE USER_ID = #{userId}
	</update>
	
	<!-- PROFILE IMG 업데이트 -->
	<!-- <update id="updateProfileImage" parameterType="map"> -->
	<update id="updateProfileImage" parameterType="app.labs.profile.model.Profile">
    	UPDATE USER_PROFILE
    	SET 
    		IMAGE_DATA = #{imageData, jdbcType=BLOB},
        	IMAGE_NAME = #{imageName} ,
        	IMAGE_CONTENT_TYPE = #{imageContentType}
        	   
    	WHERE IMAGE_ID = #{imageId}
	</update>
	
    <!-- 새로운 프로필 생성 -->
    <insert id="insertProfile" parameterType="app.labs.profile.model.Profile">
   		INSERT INTO USER_PROFILE (
        	USER_ID, USER_NAME, EMAIL, COURSE_ID, BIOGRAPHY,
        	IMAGE_ID, IMAGE_DATA, IMAGE_NAME, IMAGE_CONTENT_TYPE
    	) VALUES (
        	#{userId}, #{userName}, #{email}, #{courseId}, #{biography, jdbcType=CLOB}, #{imageId} ,
    		 #{imageData, jdbcType=BLOB},
        	 #{imageName} ,
        	 #{imageContentType}
           	)
	</insert>
	
	<select id="getMaxImageId" resultType="int">
	 	SELECT NVL(MAX(IMAGE_ID),0) AS IMAGE_ID FROM USER_PROFILE
	</select>	
</mapper>
